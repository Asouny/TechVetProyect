
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.Arrays;
import javax.swing.DefaultComboBoxModel;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author orozc
 */
public class VentanaBodega extends javax.swing.JFrame {

    /**
     * Creates new form VentanaBodega
     */
    
    public VentanaBodega() {
        initComponents();
        model = (DefaultComboBoxModel<String>) jcbSecciones.getModel();
        m=(DefaultTableModel) tblBodega.getModel();
        leerBodega();
    }
    
    private void leerBodega(){
        if (archivo.exists()) {
        try {
            FileInputStream fb= new FileInputStream("BODEGA.VET");//flujo de Bytes
            fce=new ObjectInputStream(fb);//flujo de Objectos
            B=(Bodega[]) fce.readObject();
            Object R[]=new Object[3];
            for (int i = 0; i < B.length; i++) {
                if(B[i]==null)return;
                R[0]=B[i].getID();
                R[1]=B[i].getCapacidad();
                R[2]=cadena(B[i].getSecciones());
                m.addRow(R); 
                b++;
            }
        }catch (FileNotFoundException ex){showMessageDialog(this,"ERROR");}
        catch(IOException ex){showMessageDialog(this,"ERROR");}
        catch(ClassNotFoundException ex){showMessageDialog(this,"ERROR");}
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtCapacidad = new javax.swing.JTextField();
        lblCapacidad = new javax.swing.JLabel();
        txtSeccion = new javax.swing.JTextField();
        lblSeccion = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBodega = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();
        jcbSecciones = new javax.swing.JComboBox<>();
        btnAñadirSeccion = new javax.swing.JButton();
        btnEliminarSeccion = new javax.swing.JButton();
        lblSecciones = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblID.setText("ID:");

        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        txtCapacidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCapacidadKeyPressed(evt);
            }
        });

        lblCapacidad.setText("Capacidad:");

        txtSeccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSeccionKeyPressed(evt);
            }
        });

        lblSeccion.setText("Nombre de la Seccion:");

        tblBodega.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Capacidad", "Secciones"
            }
        ));
        jScrollPane1.setViewportView(tblBodega);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        jcbSecciones.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Secciones" }));

        btnAñadirSeccion.setText("Añadir Seccion");
        btnAñadirSeccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirSeccionActionPerformed(evt);
            }
        });

        btnEliminarSeccion.setText("Eliminar Seccion");
        btnEliminarSeccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarSeccionActionPerformed(evt);
            }
        });

        lblSecciones.setText("Vista de las:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lblID)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtID))
                            .addComponent(lblSeccion))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtSeccion, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAñadirSeccion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminarSeccion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblCapacidad)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblSecciones)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbSecciones, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblID)
                    .addComponent(txtCapacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCapacidad)
                    .addComponent(jcbSecciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSecciones))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSeccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSeccion)
                    .addComponent(btnAñadirSeccion)
                    .addComponent(btnEliminarSeccion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar)
                    .addComponent(btnBuscar)
                    .addComponent(btnOrdenar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
    public int buscarBodega(int id,Bodega B[]){
        for (int i = 0; i < b; i++) {
            if(id==B[i].getID()){
                return i;
            }
        }
        return -1;
    }
    
    private void validarID()throws IntegerException,IDsException{
    try{
        ID = Integer.parseInt(txtID.getText());
        if(ID==0){
            txtID.requestFocus();
            throw new IntegerException("Falta ingresar el ID");
        }
        if(b!=0){
            for(int i = 0; i < b; i++) {
                if(ID==B[i].getID()){
                throw new IDsException("El ID ingresado ya esta en uso");
                }
            }
        }
        }catch (IntegerException | NumberFormatException | IDsException e){
            lblID.setForeground(Color.red);
            txtID.requestFocus();
            throw e;
        }
    }
    
    private void validarBodega()throws IntegerException{
    try{
        cap = Integer.parseInt(txtCapacidad.getText());
        if(cap==0){
            throw new IntegerException("Falta ingresar la capacidad");
        }
        }catch (IntegerException | NumberFormatException e){
            lblCapacidad.setForeground(Color.red);
            txtCapacidad.requestFocus();
            throw e;
        }
    try{
        if(jcbSecciones.getItemCount()<2 || txtSeccion.equals("")){
            txtSeccion.requestFocus(); 
            throw new StringException("Falta ingresar una seccion");  
            }
        }catch (StringException e){
            lblSeccion.setForeground(Color.red);
            txtSeccion.requestFocus();
            throw e;
        }
    }
    
    private void btnAñadirSeccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirSeccionActionPerformed
        String dato=txtSeccion.getText();
        jcbSecciones.addItem(dato);
        txtSeccion.setText("");
        txtSeccion.requestFocus();
        S[s++]=dato;
    }//GEN-LAST:event_btnAñadirSeccionActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try{
            validarID();
            validarBodega();
            //puesto,sueldo,nombre,sexo,edad
            B[b++]=new Bodega(ID,cap,S);
            Object O[]=new Object[6];
            O[0]=ID;
            O[1]=cap;
            O[2]=cadena(S);
            m.addRow(O);
            txtID.setText("");
            txtCapacidad.setText("");
            txtSeccion.setText("");
            for (int i = model.getSize() - 1; i >= 1; i--) {
                model.removeElementAt(i);
            }
            jcbSecciones.setSelectedIndex(0);
            guardarArray();
        }catch (IntegerException | NumberFormatException | IDsException | StringException e){
            showMessageDialog(this,e.getMessage());
        }
        Arrays.fill(S, null);
        s=0;
    }//GEN-LAST:event_btnAgregarActionPerformed
    
    public String cadena(String S[]) {
        String cadena="";
        for (int i = 0; i < S.length; i++) {
            if (S[i] != null) {
                    cadena+=S[i]+", ";
            } else {
                cadena = cadena.substring(0, cadena.length() - 2);
                break;
            }   
        }
        
        return cadena;
    }
    
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try{
        for (int i = model.getSize() - 1; i >= 1; i--) {
                model.removeElementAt(i);
            }
            int id=Integer.parseInt(txtID.getText());
        pos=buscarBodega(id,B);
        if(pos!=-1){
            txtID.setText(B[pos].getID()+"");
            txtCapacidad.setText(B[pos].getCapacidad()+"");
            for (int i = 0; i < B[pos].getSecciones().length; i++) {
                if (B[pos].getSecciones()[i] != null) {
            jcbSecciones.addItem(B[pos].getSecciones()[i]);
                }else{break;}
            }
            btnEditar.setEnabled(true);
            btnEliminar.setEnabled(true);
        }else{
            showMessageDialog(this,"Esa Bodega no se encuentra registrada");
        }
        }catch(NumberFormatException e){
            showMessageDialog(this,"Falta ingresar el ID");
            lblID.setForeground(Color.red);
            txtID.requestFocus();
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try{    
            validarBodega();
            cap=Integer.parseInt(txtCapacidad.getText());
            B[pos].setCapacidad(cap);
            m.setValueAt(cap,pos,1);
            for (int i = 1; i < jcbSecciones.getItemCount(); i++) {
                S[i - 1] = jcbSecciones.getItemAt(i).toString();
            }
            B[pos].setSecciones(S);
            m.setValueAt(cadena(S),pos,2);
            guardarArray();
            }catch(IntegerException | NumberFormatException | IDsException | StringException e){
            showMessageDialog(this,e.getMessage());
        }
        for (int i = model.getSize() - 1; i >= 1; i--) {
                model.removeElementAt(i);
            }
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarSeccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarSeccionActionPerformed
        String texto = txtSeccion.getText();
        int index = model.getIndexOf(texto);
        if (index != -1) {
            if(texto.equals("Secciones")){
            showMessageDialog(this,"Este elemento no puede ser borrado");
            }else{
            model.removeElementAt(index);
            }
        }
        txtSeccion.setText("");
    }//GEN-LAST:event_btnEliminarSeccionActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int boton=showConfirmDialog(this,"Seguro que quieres borrar?");         
        if(boton==0){
        m.removeRow(pos);
        for(int i=pos;i<b;i++){
        B[i]=B[i+1];
        b--;
        }//for
        guardarArray();
        txtID.setText("");
        txtCapacidad.setText("");
        txtSeccion.setText("");
        jcbSecciones.setSelectedIndex(0);
        }//if
        for (int i = model.getSize() - 1; i >= 1; i--) {
                model.removeElementAt(i);
            }
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        lblID.setForeground(Color.black);
    }//GEN-LAST:event_txtIDKeyPressed

    private void txtCapacidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCapacidadKeyPressed
        lblCapacidad.setForeground(Color.black);
    }//GEN-LAST:event_txtCapacidadKeyPressed

    private void txtSeccionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSeccionKeyPressed
        lblSeccion.setForeground(Color.black);
    }//GEN-LAST:event_txtSeccionKeyPressed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        OrdenaIDs();
        llenaTabla();
    }//GEN-LAST:event_btnOrdenarActionPerformed
    private void OrdenaIDs(){
        int n=b;
        for(int p=1;p<n;p++){//pasadas
            for(int i=0;i<n-p;i++){
                if(B[i].getID()>B[i+1].getID()){
                    Bodega b=new Bodega();
                    b=B[i];
                    B[i]=B[i+1];
                    B[i+1]=b;
                }//if
            }//for
        }//for
    }
    public void llenaTabla(){
        for(int i=0;i<b;i++){
            m.setValueAt(B[i].getID(),i,0);
            m.setValueAt(B[i].getCapacidad(),i,1);
            m.setValueAt(cadena(B[i].getSecciones()),i,2);
        }
    }
    private void guardarArray(){
        try {
            FileOutputStream fb= new FileOutputStream("BODEGA.VET");
            fcs=new ObjectOutputStream(fb);//true es para que agregue otra al final
            fcs.writeObject(B);
            fcs.flush();
        } catch (IOException ex) {
            showMessageDialog(this,"ERROR");}
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaBodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaBodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaBodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaBodega.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaBodega().setVisible(true);
            }
        });
    }
    private Bodega B[]=new Bodega[30];
    private String S[]= new String[30];
    private int cap=0,b=0,ID=0,s=0,pos=-1;
    private DefaultTableModel m;
    private File archivo = new File("BODEGA.VET");
    private ObjectOutputStream fcs;//flujo de objetos de escritura
    private ObjectInputStream fce;//flujo de objetos de lectura
    private DefaultComboBoxModel<String> model;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAñadirSeccion;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarSeccion;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbSecciones;
    private javax.swing.JLabel lblCapacidad;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblSeccion;
    private javax.swing.JLabel lblSecciones;
    private javax.swing.JTable tblBodega;
    private javax.swing.JTextField txtCapacidad;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtSeccion;
    // End of variables declaration//GEN-END:variables
}
