
import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author orozc
 */
public class VentanaClientesCatalogo extends javax.swing.JFrame {

    /**
     * Creates new form VentanaCliente
     */
    public VentanaClientesCatalogo() {
        initComponents();
        m = (DefaultTableModel) tblClientes.getModel();
        leerClientes();
        id++;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClientes = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txtSearch = new javax.swing.JTextField();

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        tblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IdCliente", "Nombre", "Sexo", "Edad", "Mascotas", "Cita"
            }
        ));
        tblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClientes);

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        jLabel2.setText("Catalogo de clientes");

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSearchKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(190, 190, 190)
                .addComponent(jLabel2))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btnBuscar))
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(btnOrdenar)
                .addGap(7, 7, 7)
                .addComponent(btnEliminar)
                .addGap(17, 17, 17)
                .addComponent(btnEditar))
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOrdenar)
                    .addComponent(btnEliminar)
                    .addComponent(btnEditar))
                .addGap(27, 27, 27)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int clienteEDITPOS = buscaCliente(userSelectedID, C);

        if (showConfirmDialog(this, "Se borrará el renglón, ¿proceder?") == 0) {
            m.removeRow(clienteEDITPOS); // pos, pues es la posicion de la que se habla, se borra en la tabla
            eliminarCliente(clienteEDITPOS);
            guardarArray(); //para guardarlo en el archivo
            

            btnEditar.setEnabled(false);
            btnEliminar.setEnabled(false);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtSearch.getText().equals("")) {
            leerClientes();
            return;
        } else {
            int id = Integer.parseInt(txtSearch.getText());

            int clientePOS = buscaCliente(id, C);

            if (clientePOS == -1) {
                showMessageDialog(this, "Cliente no encontrado");

            } else {
                Cliente clienteEncontrado = C[clientePOS];
                m.setRowCount(0);

                Object R[] = new Object[5];
                //ciclo que si se cumple, manda a agregar a la tabla para cuando inicie el programa de nuevo

                R[0] = clienteEncontrado.getId();
                R[1] = clienteEncontrado.getNombre();
                R[2] = clienteEncontrado.getSexo();
                R[3] = clienteEncontrado.getEdad();
                R[4] = clienteEncontrado.getMascotas();
                id = clienteEncontrado.getId();
                m.addRow(R);
                c++;
            }
        }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        int clienteEDITPOS = buscaCliente(userSelectedID, C);

        VentanaClientesActualizar frame1 = new VentanaClientesActualizar(C[clienteEDITPOS]);

        frame1.setVisible(true);

        // Agregar un WindowListener a la ventana de actualización
        frame1.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                // Código a ejecutar después de que se cierre la ventana
                System.out.println("La ventana se cerró. Ejecutando código...");
                // Aquí puedes colocar el código que deseas ejecutar

                C[clienteEDITPOS] = frame1.C;
                guardarArray();
                leerClientes();
            }
        });

    }//GEN-LAST:event_btnEditarActionPerformed

    private void llenaTabla() {
        for (int i = 0; i < c; i++) {
            //if
            m.setValueAt(C[i].getId(), i, 0);
            m.setValueAt(C[i].getNombre(), i, 1);
            m.setValueAt(C[i].getSexo(), i, 2);
            m.setValueAt(C[i].getEdad(), i, 3);
            m.setValueAt(C[i].getMascotas(), i, 4);

        }

    }

    private void ordenaNombre() {
        int n = c; //a: numero de alumnos en el arreglo
        for (int p = 1; p < n; p++) //ciclo para las pasadas, siempre son n-1, que vienen a ser las "Rondas" para ordenar
        {
            for (int i = 0; i < n - p; i++) {
                if (C[i].getNombre().compareTo(C[i + 1].getNombre()) > 0) { //si las dos son iguales, retorna 0, si la segunda es mayor que la primera
                    //retorna menor a 0, si la primera es mayor alfabeticamente, retorna mayor a 0
                    Cliente cl = new Cliente();
                    cl = C[i];
                    C[i] = C[i + 1];
                    C[i + 1] = cl;
                }
            }
        }
    }//ordena por nombre

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        ordenaNombre();
        llenaTabla();
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyPressed
        if (txtSearch.getText().equals("")) {
            leerClientes();
            return;
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyPressed

    private void txtSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyTyped
        if (txtSearch.getText().equals("")) {
            leerClientes();
            return;
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyTyped

    private void tblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClientesMouseClicked
        userSelectedID = obtenerIdClienteSeleccionado();
// TODO add your handling code here:
    }//GEN-LAST:event_tblClientesMouseClicked

    public static void validarNombre(String cad) throws StringException {
        cad = cad.toLowerCase();
        String abc = "abcdefghijklmnopqrstuvwxyzáéíóúäëïöüñÑ ";
        for (int i = 0; i < cad.length(); i++) {
            char c = cad.charAt(i);
            if (abc.indexOf(c) == -1) {
                throw new StringException("Solo letras permitidas");
            }
        }//for
    }

    public void validaEdad(int e) throws IntegerException {
        //Con el throw se incluye, significa que el metodo lanzara una excepcion, se lanzara si se cumplen las condiciones dichas
        if (e < 7 || e > 95) {
            throw new IntegerException("La edad no puede ser menor a 7, ni mayor a 95");
        }
    }

    private void guardarArray() {

        try {
            //se abre el flujo y se manda el metodo para guardar
            FileOutputStream flujoBytes = new FileOutputStream("Clientes.obj");
            fcs = new ObjectOutputStream(flujoBytes);
            fcs.writeObject(C);
            fcs.flush();
        } catch (IOException ex) {
            showMessageDialog(this, "Error");
        }

    }

    private void leerClientes() {
        try {
            FileInputStream flujoBytes = new FileInputStream("Clientes.obj"); //flujo de Bytes
            fce = new ObjectInputStream(flujoBytes); //flujo de objetos
            C = (Cliente[]) fce.readObject();
            Object R[] = new Object[5];
            m.setRowCount(0);

            //ciclo que si se cumple, manda a agregar a la tabla para cuando inicie el programa de nuevo
            for (int i = 0; i < C.length; i++) {
                if (C[i] == null) {
                    return; //si el renglon que quiere agregar está vacío, no lo agregará y no marcará error
                }

                R[0] = C[i].getId();
                R[1] = C[i].getNombre();
                R[2] = C[i].getSexo();
                R[3] = C[i].getEdad();
                R[4] = C[i].getMascotas();
                id = C[i].getId();
                m.addRow(R);
                c++;
            }

        } catch (FileNotFoundException ex) {
            showMessageDialog(this, "Error el archivo no se encontro");
        } catch (IOException ex) {
            showMessageDialog(this, "Error");
        } catch (ClassNotFoundException ex) {
            showMessageDialog(this, "Error");
        }
    }

    public int buscaCliente(int ca, Cliente A[]) {
        for (int i = 0; i < A.length; i++) {
            if(A[i]== null){
                return -1;
            }
            if (ca == C[i].getId()) {
                if (C[i] == null) {
                    return -1; //si el renglon que quiere agregar está vacío, no lo agregará y no marcará error
                }
                return i; //Return el arreglo en esa posición
            }//Para que compare id (parámetro) con id del arreglo
        }
        return -1; //Por si no los encontró

    }

    private int obtenerIdClienteSeleccionado() {
        // Obtener el índice de la fila seleccionada en la tabla
        int rowIndex = tblClientes.getSelectedRow();

        // Verificar si hay una fila seleccionada
        if (rowIndex != -1) {
            // Obtener el valor del ID del cliente en la columna 0 (primera columna)
            int idCliente = (int) tblClientes.getValueAt(rowIndex, 0);

            btnEditar.setEnabled(true);
            btnEliminar.setEnabled(true);
            // retornar el ID del cliente en un mensaje
            return idCliente;
        } else {
            return -1;
        }
    }

    public void eliminarCliente(int posicion) {

        // Copiar los elementos antes de la posición
        System.arraycopy(C, 0, C, 0, posicion);

        // Copiar los elementos después de la posición
        System.arraycopy(C, posicion + 1, C, posicion, C.length - posicion - 1);

        // Asignar null al último elemento
        C[C.length - 1] = null;

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaClientesRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaClientesRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaClientesRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaClientesRegistrar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaClientesCatalogo().setVisible(true);
            }
        });
    }
    private Cliente C[] = new Cliente[30];
    private int edad, mascu;
    private int c = 0;
    private int id;
    private int pos = -1;
    private String name, sex;
    private DefaultTableModel m;

    private int userSelectedID;
    //nuevos agregados con lo de archivos
    private ObjectOutputStream fcs; // flujo de objetos de escritura
    private ObjectInputStream fce; //flujo de objetos de lectura
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblClientes;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
