
import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import static javax.swing.JOptionPane.showConfirmDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author orozc
 */
public class VentanaEmpleados extends javax.swing.JFrame {

    /**
     * Creates new form VentanaEmpleados
     */
    public VentanaEmpleados() {
        initComponents();
        m=(DefaultTableModel) tblEmpleados.getModel();
        leerEmpleados();
    }
    
    private void leerEmpleados(){
        if (archivo.exists()) {
        try {
            FileInputStream fb= new FileInputStream("EMPLEADOS.VET");//flujo de Bytes
            fce=new ObjectInputStream(fb);//flujo de Objectos
            //String reg=""; TAREA UNA CONDICION PARA QUE NO MARQUE ERROR AL FINALIZAR EL ERROR
            E=(Empleado[]) fce.readObject();
            Object R[]=new Object[6];
            for (int i = 0; i < E.length; i++) {
                if(E[i]==null)return;
                R[0]=E[i].getID();
                R[1]=E[i].getNombre();
                R[2]=E[i].getEdad();
                R[3]=E[i].getSexo();
                R[4]=E[i].getPuesto();
                R[5]=E[i].getSueldo();
                m.addRow(R); 
                e++;
            }
        }catch (FileNotFoundException ex){showMessageDialog(this,"ERROR");}
        catch(IOException ex){showMessageDialog(this,"ERROR");}
        catch(ClassNotFoundException ex){showMessageDialog(this,"ERROR");}
        }
    }
    
    public int buscarEmpleado(int id,Empleado E[]){
        for (int i = 0; i < e; i++) {
            if(id==E[i].getID()){
                return i;
            }
        }
        return -1;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNombre = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        lblEdad = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmpleados = new javax.swing.JTable();
        txtEdad = new javax.swing.JTextField();
        lblSexo = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        jcbSexo = new javax.swing.JComboBox<>();
        btnBuscar = new javax.swing.JButton();
        lblSueldo = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        txtSueldo = new javax.swing.JTextField();
        jcbPuesto = new javax.swing.JComboBox<>();
        lblNombre = new javax.swing.JLabel();
        lblPuesto = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        btnOrdenar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNombreKeyPressed(evt);
            }
        });

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        lblEdad.setText("Edad:");

        tblEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Edad", "Sexo", "Puesto", "Sueldo"
            }
        ));
        jScrollPane1.setViewportView(tblEmpleados);

        txtEdad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEdadKeyPressed(evt);
            }
        });

        lblSexo.setText("Sexo:");

        btnEliminar.setText("Eliminar");
        btnEliminar.setEnabled(false);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jcbSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sexo", "H", "F" }));
        jcbSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSexoActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblSueldo.setText("Sueldo:");

        btnEditar.setText("Editar");
        btnEditar.setEnabled(false);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        txtSueldo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSueldoKeyPressed(evt);
            }
        });

        jcbPuesto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Puesto", "Veterinario", "Limpieza", "Administracion" }));
        jcbPuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbPuestoActionPerformed(evt);
            }
        });

        lblNombre.setText("Nombre:");

        lblPuesto.setText("Puesto:");

        lblID.setText("ID:");

        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIDKeyPressed(evt);
            }
        });

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSueldo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOrdenar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEdad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSexo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPuesto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbPuesto, 0, 101, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEdad)
                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSexo)
                    .addComponent(jcbSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPuesto)
                    .addComponent(jcbPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOrdenar)
                    .addComponent(btnBuscar)
                    .addComponent(lblSueldo)
                    .addComponent(txtSueldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar)
                    .addComponent(btnAgregar)
                    .addComponent(btnEditar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void validarID()throws IntegerException,IDsException{
    try{
        ID = Integer.parseInt(txtID.getText());
        if(ID==0){
            txtID.requestFocus();
            throw new IntegerException("Falta ingresar el ID");
        }
        if(e!=0){
            for(int i = 0; i < e; i++) {
                if(ID==E[i].getID()){
                throw new IDsException("El ID ingresado ya esta en uso");
                }
            }
        }
        }catch (IntegerException | NumberFormatException | IDsException e){
            lblID.setForeground(Color.red);
            txtID.requestFocus();
            throw e;
        }
    }
    
    private void validarEmpleado()throws StringException,IntegerException,IDsException{
    try{
        name=txtNombre.getText();
        if(name.equals("")){
            txtNombre.requestFocus(); 
            throw new StringException("Falta ingresar el nombre");  
            }
        }catch (StringException e){
            lblNombre.setForeground(Color.red);
            txtNombre.requestFocus();
            throw e;
        }
    try{
        edad = Integer.parseInt(txtEdad.getText());
        if(edad==0){
            throw new IntegerException("Falta ingresar la edad");
        }
        }catch (IntegerException | NumberFormatException e){
            lblEdad.setForeground(Color.red);
            txtEdad.requestFocus();
            throw e;
        }
        try{
        sex=jcbSexo.getSelectedItem().toString();
        if(sex.equals("Sexo")){
            throw new StringException("Falta ingresar el Sexo"); 
        }
        }catch (StringException e){
            lblSexo.setForeground(Color.red);
            jcbSexo.requestFocus();
            throw e;
        }
        try{
        puesto=jcbPuesto.getSelectedItem().toString();
        if(puesto.equals("Puesto")){
            throw new StringException("Falta ingresar el puesto");
        }
        }catch (StringException e){
            lblSexo.setForeground(Color.red);
            jcbSexo.requestFocus();
            throw e;
        }
        try{
        su = Integer.parseInt(txtSueldo.getText());
        if(su==0){            
            throw new IntegerException("Falta ingresar el sueldo"); 
        }
        }catch (IntegerException | NumberFormatException e){
            lblSueldo.setForeground(Color.red);
            txtSueldo.requestFocus();
            throw e;
        }
    }
    
    private void txtNombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyPressed
        lblNombre.setForeground(Color.black);
    }//GEN-LAST:event_txtNombreKeyPressed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try{
            validarID();
            validarEmpleado();
            //puesto,sueldo,nombre,sexo,edad
            E[e++]=new Empleado(puesto,su,name,sex,edad,ID);
            Object O[]=new Object[6];
            O[0]=ID;
            O[1]=name;
            O[2]=edad;
            O[3]=sex;
            O[4]=puesto;
            O[5]=su;
            m.addRow(O);
            txtID.setText("");
            txtNombre.setText("");
            txtEdad.setText("");
            jcbSexo.setSelectedIndex(0);
            txtSueldo.setText("");
            jcbPuesto.setSelectedIndex(0);
            guardarArray();
        }catch (IntegerException | NumberFormatException | IDsException | StringException e){
            showMessageDialog(this,e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarActionPerformed
    
    private void guardarArray(){
        try {
            FileOutputStream fb= new FileOutputStream("EMPLEADOS.VET");
            fcs=new ObjectOutputStream(fb);//true es para que agregue otra al final
            fcs.writeObject(E);
            fcs.flush();
        } catch (IOException ex) {
            showMessageDialog(this,"ERROR");}
    }
    
    private void jcbSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSexoActionPerformed
        lblSexo.setForeground(Color.black);
    }//GEN-LAST:event_jcbSexoActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try{
        int id=Integer.parseInt(txtID.getText());
        pos=buscarEmpleado(id,E);
        if(pos!=-1){
            txtNombre.setText(E[pos].getNombre());
            txtEdad.setText(E[pos].getEdad()+"");
            jcbSexo.setSelectedItem(E[pos].getSexo());
            txtSueldo.setText(E[pos].getSueldo()+"");
            jcbPuesto.setSelectedItem(E[pos].getPuesto());
            btnEditar.setEnabled(true);
            btnEliminar.setEnabled(true);
        }else{
            showMessageDialog(this,"Ese empleado no se encuentra registrado");
        }
        }catch(NumberFormatException e){
            showMessageDialog(this,"Falta ingresar el ID");}
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        try{    
            validarEmpleado();
            //editar nombre
            name=txtNombre.getText();
            E[pos].setNombre(name);
            m.setValueAt(name,pos,1);
            edad = Integer.parseInt(txtEdad.getText());
            E[pos].setEdad(edad);
            m.setValueAt(edad,pos,2);
            sex=jcbSexo.getSelectedItem().toString();
            E[pos].setSexo(sex);
            m.setValueAt(sex,pos,3);
            puesto=jcbPuesto.getSelectedItem().toString();
            E[pos].setPuesto(puesto);
            m.setValueAt(puesto,pos,4);
            su=Integer.parseInt(txtSueldo.getText());
            E[pos].setSueldo(su);
            m.setValueAt(su,pos,5);
            }catch(IntegerException | NumberFormatException | IDsException | StringException e){
            showMessageDialog(this,e.getMessage());
        }
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtSueldoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSueldoKeyPressed
        lblSueldo.setForeground(Color.black);
    }//GEN-LAST:event_txtSueldoKeyPressed
 
    private void jcbPuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbPuestoActionPerformed
        lblPuesto.setForeground(Color.black);
    }//GEN-LAST:event_jcbPuestoActionPerformed

    private void txtEdadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEdadKeyPressed
        lblEdad.setForeground(Color.black);
    }//GEN-LAST:event_txtEdadKeyPressed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int boton=showConfirmDialog(this,"Seguro que quieres borrar?");         
        if(boton==0){
        m.removeRow(pos);
        for(int i=pos;i<e;i++){
        E[i]=E[i+1];
        e--;
        }//for
        guardarArray();
        txtID.setText("");
        txtNombre.setText("");
        txtEdad.setText("");
        jcbSexo.setSelectedIndex(0);
        txtSueldo.setText("");
        jcbPuesto.setSelectedIndex(0);
        }//if
        btnEditar.setEnabled(false);
        btnEliminar.setEnabled(false);
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyPressed
        lblID.setForeground(Color.black);
    }//GEN-LAST:event_txtIDKeyPressed

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
        OrdenaIDs();
        llenaTabla();
    }//GEN-LAST:event_btnOrdenarActionPerformed
    private void OrdenaIDs(){
        int n=e;
        for(int p=1;p<n;p++){//pasadas
            for(int i=0;i<n-p;i++){
                if(E[i].getID()>E[i+1].getID()){
                    Empleado e=new Empleado();
                    e=E[i];
                    E[i]=E[i+1];
                    E[i+1]=e;
                }//if
            }//for
        }//for
    }
    public void llenaTabla(){
        for(int i=0;i<e;i++){
            m.setValueAt(E[i].getID(),i,0);
            m.setValueAt(E[i].getNombre(),i,1);
            m.setValueAt(E[i].getEdad(),i,2);
            m.setValueAt(E[i].getSexo(),i,3);
            m.setValueAt(E[i].getPuesto(),i,4);
            m.setValueAt(E[i].getSueldo(),i,5);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaEmpleados().setVisible(true);
            }
        });
    }
    private Empleado E[]=new Empleado[30];
    private int edad,e,su,ID,pos=-1;
    private String name,sex,puesto;
    private DefaultTableModel m;
    private File archivo = new File("EMPLEADOS.VET");
    private ObjectOutputStream fcs;//flujo de objetos de escritura
    private ObjectInputStream fce;//flujo de objetos de lectura
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcbPuesto;
    private javax.swing.JComboBox<String> jcbSexo;
    private javax.swing.JLabel lblEdad;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPuesto;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblSueldo;
    private javax.swing.JTable tblEmpleados;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSueldo;
    // End of variables declaration//GEN-END:variables
}
